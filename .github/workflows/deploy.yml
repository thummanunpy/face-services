name: Deploy to EC2

on:
  push:
    branches:
      - developer

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build --no-cache -t zz212224236/snapgoated-services:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push zz212224236/snapgoated-services:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update EC2 and install Docker (if not already installed)
            sudo apt-get update -y
            sudo apt-get install -y docker.io

            # Docker login
            echo ${{ secrets.DOCKER_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            # Remove all Docker images
            sudo docker rmi -f $(sudo docker images -q) || true

            # Pull the latest Docker image from Docker Hub
            sudo docker pull zz212224236/snapgoated-services:${{ github.sha }}

            # Stop and remove the old container (if any)
            sudo docker stop snapgoated-services || true
            sudo docker rm snapgoated-services || true

            # Run the new Docker container
            sudo docker run -d --name snapgoated-services -p 8080:8080 -e DATABASE_URL=${{ secrets.DATABASE_URL }} zz212224236/snapgoated-services:${{ github.sha }}

            # Optionally, clean up unused Docker images
            sudo docker system prune -f

            # Verify that the container is running
            sudo docker ps -a

            # Optionally, view logs
            sudo docker logs snapgoated-services